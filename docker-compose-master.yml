services:
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: timescaledb
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${TIMESCALE_DB_USER}
      - POSTGRES_PASSWORD=${TIMESCALE_DB_PASSWORD}
      - POSTGRES_DB=${TIMESCALE_DB_NAME}
    volumes:
      - ./data/timescale_db:/var/lib/postgresql/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M

  backend:
    build:
      context: .
      dockerfile: master/backend/Dockerfile
    image: nodetrack-master-backend:latest
    container_name: nodetrack-backend
    expose:
      - "5000"
    ports:
      - "5000:5000"
    env_file:
      - ./.env
    volumes:
      - ./data:/app/backend/data
    depends_on:
      - timescaledb
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 6G
        reservations:
          memory: 1G

  frontend:
    build:
      context: .
      dockerfile: master/frontend/Dockerfile
    image: nodetrack-master-frontend:latest
    container_name: nodetrack-frontend
    environment:
      - TZ=Asia/Riyadh
    expose:
      - "3000"
    env_file:
      - ./.env
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "3000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    restart: unless-stopped